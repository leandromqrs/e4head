# This is the build file for project "fboot"
# It is autogenerated by the Meson build system.
# Do not edit by hand.

ninja_required_version = 1.7.1

# Rules for compiling.

rule c_COMPILER
 command = cc $ARGS -MD -MQ $out -MF $DEPFILE -o $out -c $in
 deps = gcc
 depfile = $DEPFILE_UNQUOTED
 description = Compiling C object $out

# Rules for linking.

rule c_LINKER
 command = cc $ARGS -o $out $in $LINK_ARGS
 description = Linking target $out

rule SHSYM
 command = /usr/bin/meson --internal symbolextractor '/home/leandromqrs/Documentos/Programação/Git/e4head/builddir' $in $IMPLIB $out $CROSS
 description = Generating symbol file $out
 restat = 1

# Other rules

rule CUSTOM_COMMAND
 command = $COMMAND
 description = $DESC
 restat = 1

rule REGENERATE_BUILD
 command = /usr/bin/meson --internal regenerate '/home/leandromqrs/Documentos/Programação/Git/e4head' '/home/leandromqrs/Documentos/Programação/Git/e4head/builddir' --backend ninja
 description = Regenerating build files.
 generator = 1

# Phony build target, always out of date

build PHONY: phony 

# Build rules for targets

build src/fboot.p/collect.c.o: c_COMPILER ../src/collect.c
 DEPFILE = src/fboot.p/collect.c.o.d
 DEPFILE_UNQUOTED = src/fboot.p/collect.c.o.d
 ARGS = -Isrc/fboot.p -Isrc -I../src -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -g

build src/fboot.p/fileptr.c.o: c_COMPILER ../src/fileptr.c
 DEPFILE = src/fboot.p/fileptr.c.o.d
 DEPFILE_UNQUOTED = src/fboot.p/fileptr.c.o.d
 ARGS = -Isrc/fboot.p -Isrc -I../src -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -g

build src/fboot.p/listener.c.o: c_COMPILER ../src/listener.c
 DEPFILE = src/fboot.p/listener.c.o.d
 DEPFILE_UNQUOTED = src/fboot.p/listener.c.o.d
 ARGS = -Isrc/fboot.p -Isrc -I../src -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -g

build src/fboot.p/eventcatcher.c.o: c_COMPILER ../src/eventcatcher.c
 DEPFILE = src/fboot.p/eventcatcher.c.o.d
 DEPFILE_UNQUOTED = src/fboot.p/eventcatcher.c.o.d
 ARGS = -Isrc/fboot.p -Isrc -I../src -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -g

build src/fboot: c_LINKER src/fboot.p/collect.c.o src/fboot.p/fileptr.c.o src/fboot.p/listener.c.o src/fboot.p/eventcatcher.c.o
 LINK_ARGS = -Wl,--as-needed -Wl,--no-undefined

build src/libfboot.so.p/ini.c.o: c_COMPILER ../src/ini.c
 DEPFILE = src/libfboot.so.p/ini.c.o.d
 DEPFILE_UNQUOTED = src/libfboot.so.p/ini.c.o.d
 ARGS = -Isrc/libfboot.so.p -Isrc -I../src -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -g -fPIC

build src/libfboot.so.p/config.c.o: c_COMPILER ../src/config.c
 DEPFILE = src/libfboot.so.p/config.c.o.d
 DEPFILE_UNQUOTED = src/libfboot.so.p/config.c.o.d
 ARGS = -Isrc/libfboot.so.p -Isrc -I../src -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -g -fPIC

build src/libfboot.so.p/logging.c.o: c_COMPILER ../src/logging.c
 DEPFILE = src/libfboot.so.p/logging.c.o.d
 DEPFILE_UNQUOTED = src/libfboot.so.p/logging.c.o.d
 ARGS = -Isrc/libfboot.so.p -Isrc -I../src -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -g -fPIC

build src/libfboot.so.p/common.c.o: c_COMPILER ../src/common.c
 DEPFILE = src/libfboot.so.p/common.c.o.d
 DEPFILE_UNQUOTED = src/libfboot.so.p/common.c.o.d
 ARGS = -Isrc/libfboot.so.p -Isrc -I../src -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -g -fPIC

build src/libfboot.so.p/fiemap.c.o: c_COMPILER ../src/fiemap.c
 DEPFILE = src/libfboot.so.p/fiemap.c.o.d
 DEPFILE_UNQUOTED = src/libfboot.so.p/fiemap.c.o.d
 ARGS = -Isrc/libfboot.so.p -Isrc -I../src -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -g -fPIC

build src/libfboot.so.p/device.c.o: c_COMPILER ../src/device.c
 DEPFILE = src/libfboot.so.p/device.c.o.d
 DEPFILE_UNQUOTED = src/libfboot.so.p/device.c.o.d
 ARGS = -Isrc/libfboot.so.p -Isrc -I../src -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -g -fPIC

build src/libfboot.so.p/libfboot.so.symbols: SHSYM src/libfboot.so
 IMPLIB = src/libfboot.so

build src/libfboot.so: c_LINKER src/libfboot.so.p/ini.c.o src/libfboot.so.p/config.c.o src/libfboot.so.p/logging.c.o src/libfboot.so.p/common.c.o src/libfboot.so.p/fiemap.c.o src/libfboot.so.p/device.c.o
 LINK_ARGS = -Wl,--as-needed -Wl,--no-undefined -shared -fPIC -Wl,--start-group -Wl,-soname,libfboot.so -Wl,--end-group

# Test rules

build meson-test: CUSTOM_COMMAND all PHONY
 COMMAND = /usr/bin/meson test --no-rebuild --print-errorlogs
 DESC = Running$ all$ tests.
 pool = console

build test: phony meson-test

build meson-benchmark: CUSTOM_COMMAND all PHONY
 COMMAND = /usr/bin/meson test --benchmark --logbase benchmarklog --num-processes=1 --no-rebuild
 DESC = Running$ benchmark$ suite.
 pool = console

build benchmark: phony meson-benchmark

# Install rules

build meson-install: CUSTOM_COMMAND PHONY | all
 DESC = Installing$ files.
 COMMAND = /usr/bin/meson install --no-rebuild
 pool = console

build install: phony meson-install

build meson-dist: CUSTOM_COMMAND PHONY
 DESC = Creating$ source$ packages
 COMMAND = /usr/bin/meson dist
 pool = console

build dist: phony meson-dist

# Suffix

build meson-scan-build: CUSTOM_COMMAND PHONY
 COMMAND = /usr/bin/meson --internal scanbuild '/home/leandromqrs/Documentos/Programação/Git/e4head' '/home/leandromqrs/Documentos/Programação/Git/e4head/builddir' /usr/bin/meson
 pool = console

build scan-build: phony meson-scan-build

build meson-uninstall: CUSTOM_COMMAND PHONY
 COMMAND = /usr/bin/meson --internal uninstall
 pool = console

build uninstall: phony meson-uninstall

build all: phony src/fboot src/libfboot.so

build clean: phony meson-clean

build meson-clean: CUSTOM_COMMAND PHONY
 COMMAND = /usr/bin/ninja -t clean
 description = Cleaning

build build.ninja: REGENERATE_BUILD ../meson.build ../src/meson.build ../doc/meson.build meson-private/coredata.dat
 pool = console

build reconfigure: REGENERATE_BUILD PHONY
 pool = console

build ../meson.build ../src/meson.build ../doc/meson.build meson-private/coredata.dat: phony 

default all

